plugins {
    id 'java'
    id 'application'
    // shadow plugin to produce fat JARs
    id 'com.github.johnrengelman.shadow' version '6.1.0'
}

group 'org.example'
version '1.0-SNAPSHOT'
mainClassName = 'streamingdatapipelineexercise.Launcher'

ext {
    flinkVersion = '1.13.0'
    scalaBinaryVersion = '2.12'
    slf4jVersion = '1.7.15'
    log4jVersion = '2.12.1'
    postgresJDBCVersion = '42.2.20'
}

repositories {
    mavenCentral()
    maven {
        url 'https://packages.confluent.io/maven/'
    }
}

applicationDefaultJvmArgs = ["-Dlog4j.configurationFile=log4j2.properties"]

dependencies {
    implementation "org.apache.flink:flink-streaming-java_${scalaBinaryVersion}:${flinkVersion}"
    implementation "org.apache.flink:flink-clients_${scalaBinaryVersion}:${flinkVersion}"

    // for Kafka connector
    implementation "org.apache.flink:flink-connector-kafka_${scalaBinaryVersion}:${flinkVersion}"

    // for jdbc
    implementation "org.apache.flink:flink-connector-jdbc_${scalaBinaryVersion}:${flinkVersion}"
    implementation "org.postgresql:postgresql:${postgresJDBCVersion}"

    //  for avro confluent schema registry
    implementation "org.apache.flink:flink-avro-confluent-registry:${flinkVersion}"

    // for table api
    implementation "org.apache.flink:flink-table-api-java-bridge_${scalaBinaryVersion}:${flinkVersion}"
    implementation "org.apache.flink:flink-table-planner_${scalaBinaryVersion}:${flinkVersion}"
    implementation "org.apache.flink:flink-table-planner-blink_${scalaBinaryVersion}:${flinkVersion}"
    implementation "org.apache.flink:flink-streaming-scala_${scalaBinaryVersion}:${flinkVersion}"

    implementation "org.apache.logging.log4j:log4j-api:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-core:${log4jVersion}"
    implementation "org.apache.logging.log4j:log4j-slf4j-impl:${log4jVersion}"
    implementation "org.slf4j:slf4j-log4j12:${slf4jVersion}"

    testImplementation "org.apache.flink:flink-test-utils_${scalaBinaryVersion}:${flinkVersion}"
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.6.0'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
}

run.classpath = sourceSets.main.runtimeClasspath

jar {
    manifest {
        attributes 'Built-By': System.getProperty('user.name'),
                'Build-Jdk': System.getProperty('java.version')
    }
}

shadowJar {
    configurations = [project.configurations.compileClasspath]

    dependencies {
        exclude(dependency("org.apache.flink:flink-streaming-java_.*"))
        exclude(dependency("org.apache.flink:flink-streaming-scala_.*"))
        exclude(dependency("org.apache.flink:flink-clients_.*"))
        exclude(dependency("org.apache.flink:flink-table-.*"))

        exclude(dependency("org.codehaus.janino:.*"))

        exclude(dependency("org.slf4j:.*"))
        exclude(dependency("org.apache.logging.log4j:.*"))
    }

//    https://ci.apache.org/projects/flink/flink-docs-release-1.13/docs/connectors/table/overview/#transform-table-connectorformat-resources
//    Merge META-INF/services
    mergeServiceFiles()
}

test {
    useJUnitPlatform()
}
